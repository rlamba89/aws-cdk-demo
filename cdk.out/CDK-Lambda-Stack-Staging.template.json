{
 "Resources": {
  "FunctionStagingServiceRoleA512FBD7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/Function-Staging/ServiceRole/Resource"
   }
  },
  "FunctionStaging1785DE28": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Ref": "FunctionStagingLambdaSourceBucketNameParameter9934F974"
     },
     "S3Key": {
      "Ref": "FunctionStagingLambdaSourceObjectKeyParameter9D29163A"
     }
    },
    "Role": {
     "Fn::GetAtt": [
      "FunctionStagingServiceRoleA512FBD7",
      "Arn"
     ]
    },
    "FunctionName": "ServiceLambda-CDKDemo-Staging",
    "Handler": "source/lambda.handler",
    "Runtime": "nodejs14.x"
   },
   "DependsOn": [
    "FunctionStagingServiceRoleA512FBD7"
   ],
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/Function-Staging/Resource"
   }
  },
  "FunctionStagingFunctionUrl84D01EC0": {
   "Type": "AWS::Lambda::Url",
   "Properties": {
    "AuthType": "NONE",
    "TargetFunctionArn": {
     "Fn::GetAtt": [
      "FunctionStaging1785DE28",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/Function-Staging/FunctionUrl/Resource"
   }
  },
  "FunctionStaginginvokefunctionurlDA704652": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunctionUrl",
    "FunctionName": {
     "Fn::GetAtt": [
      "FunctionStaging1785DE28",
      "Arn"
     ]
    },
    "Principal": "*",
    "FunctionUrlAuthType": "NONE"
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/Function-Staging/invoke-function-url"
   }
  },
  "ServiceAPI3C3FEA49": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "MyService-CDkDemo-Staging",
    "ProtocolType": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/ServiceAPI/Resource"
   }
  },
  "ServiceAPIDefaultRouteLambdaIntegrationStaging3F8C3F13": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ServiceAPI3C3FEA49"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::GetAtt": [
      "FunctionStaging1785DE28",
      "Arn"
     ]
    },
    "PayloadFormatVersion": "2.0"
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/ServiceAPI/DefaultRoute/LambdaIntegration-Staging/Resource"
   }
  },
  "ServiceAPIDefaultRouteLambdaIntegrationStagingPermission1C432875": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "FunctionStaging1785DE28",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ServiceAPI3C3FEA49"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/ServiceAPI/DefaultRoute/LambdaIntegration-Staging-Permission"
   }
  },
  "ServiceAPIDefaultRouteB19188BE": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ServiceAPI3C3FEA49"
    },
    "RouteKey": "$default",
    "AuthorizationType": "NONE",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ServiceAPIDefaultRouteLambdaIntegrationStaging3F8C3F13"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/ServiceAPI/DefaultRoute/Resource"
   }
  },
  "ServiceAPIDefaultStageD3D272D3": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "ServiceAPI3C3FEA49"
    },
    "StageName": "$default",
    "AutoDeploy": true
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/ServiceAPI/DefaultStage/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/01Py07DMBD8lt6TbUgvHEGVED2BgjijbbKEbf2I7HUrZOXfsd0E9TSzs+OdcQvtDmKzwauv++FcKz5C/BDsz1WSvqJCfRwQ4kswvbA11f7b/POVfDqV9QXeyWn2PulzxaghdlZRXmScK5x4RKEr/l5aiEl+njhvD0ZodLiGdDZIeZXKjDTP5TI61CTk8vAWZApSrORtcH1x760ZWEp2U6OafhCazdPyu23G+/zFEV9Fplwj4y04s/tGeV6bGDsQnPz28vAIu3T+5JlrF4ywJuhu+Afs8EhNWAEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "CDK-Lambda-Stack-Staging/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "FunctionStagingLambdaSourceBucketNameParameter9934F974": {
   "Type": "String"
  },
  "FunctionStagingLambdaSourceObjectKeyParameter9D29163A": {
   "Type": "String"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "LambdaUrl": {
   "Description": "lambda url",
   "Value": {
    "Fn::GetAtt": [
     "FunctionStagingFunctionUrl84D01EC0",
     "FunctionUrl"
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}